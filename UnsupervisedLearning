K-NEAREST NEIGHBOR ALGORITHM

STEPS FOLLOWED:-
STEP 1: Download and load the data. Convert the data set into a frequency table.
The data is loaded without headers using a function prepare_data() in the implementation. Using for loops, data is separated into two dataset; training dataset and testing dataset randomly.

STEP 2: Since the data is numeric and continuous, Euclidean Distance is calculated to find out nearest neighbor in a dimension space using a function calc_euclideanDistance() between the data points. Formula used:

STEP 3: The neighbors are calculated using a function myknnclassify() that takes three parameters namely, the training dataset, the testing dataset and the value of K which specifies how many neighbors to consider while making a prediction. The function myknnregressor() predicts value of the target feature by calculating the average of the values of the neighbors features.

STEP 4: For every value in the test dataset, k neighbors are considered and votes are taken in order to calculate the class of the value from the test dataset. A function getVotes() is defined to carry the above calculations. The highest votes for a particular class will be the predicted class for the instance in the test dataset.

STEP 5: Accuracy of the program is calculated based on the number of correct predictions made, the function calc_accuracy (). It sums the total correct predictions and returns the accuracy in percentage.
